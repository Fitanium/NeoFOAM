<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespaceNeoFOAM_1_1DSL" kind="namespace" language="C++">
    <compoundname>NeoFOAM::DSL</compoundname>
    <innerclass refid="classNeoFOAM_1_1DSL_1_1EqnSystem" prot="public">NeoFOAM::DSL::EqnSystem</innerclass>
    <innerclass refid="classNeoFOAM_1_1DSL_1_1EqnTermMixin" prot="public">NeoFOAM::DSL::EqnTermMixin</innerclass>
    <innerclass refid="classNeoFOAM_1_1DSL_1_1EqnTerm" prot="public">NeoFOAM::DSL::EqnTerm</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceNeoFOAM_1_1DSL_1ab072f0b9ab697dafc3ff480643acecc0" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>concept</type>
        <definition>concept NeoFOAM::DSL::HasTemporalTerm</definition>
        <argsstring></argsstring>
        <name>HasTemporalTerm</name>
        <initializer>= requires(T t) {
    {
        t.temporalOperation(std::declval&lt;<ref refid="classNeoFOAM_1_1Field" kindref="compound">NeoFOAM::Field</ref>&lt;<ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">NeoFOAM::scalar</ref>&gt;&amp;&gt;())
    } -&gt; std::same_as&lt;void&gt;; 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="24" column="9" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceNeoFOAM_1_1DSL_1a41b1b4bcc794ab897f65d25b8ba1e371" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>concept</type>
        <definition>concept NeoFOAM::DSL::HasExplicitTerm</definition>
        <argsstring></argsstring>
        <name>HasExplicitTerm</name>
        <initializer>= requires(T t) {
    {
        t.explicitOperation(std::declval&lt;<ref refid="classNeoFOAM_1_1Field" kindref="compound">NeoFOAM::Field</ref>&lt;<ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">NeoFOAM::scalar</ref>&gt;&amp;&gt;())
    } -&gt; std::same_as&lt;void&gt;; 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="31" column="9" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceNeoFOAM_1_1DSL_1a549fcb3f54a0badd10914959cad8a09a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classNeoFOAM_1_1DSL_1_1EqnSystem" kindref="compound">EqnSystem</ref>&lt; ValueType &gt;</type>
        <definition>EqnSystem&lt;ValueType&gt; NeoFOAM::DSL::operator+</definition>
        <argsstring>(EqnSystem&lt; ValueType &gt; lhs, const EqnSystem&lt; ValueType &gt; &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="classNeoFOAM_1_1DSL_1_1EqnSystem" kindref="compound">EqnSystem</ref>&lt; ValueType &gt;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1DSL_1_1EqnSystem" kindref="compound">EqnSystem</ref>&lt; ValueType &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnSystem.hpp" line="214" column="11" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnSystem.hpp" bodystart="214" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1DSL_1ac11acf5353f3c8508112f3f5bf0bdf46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
          <param>
            <type>typename EqnTermType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classNeoFOAM_1_1DSL_1_1EqnSystem" kindref="compound">EqnSystem</ref>&lt; ValueType &gt;</type>
        <definition>EqnSystem&lt;ValueType&gt; NeoFOAM::DSL::operator+</definition>
        <argsstring>(EqnSystem&lt; ValueType &gt; lhs, const EqnTermType &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="classNeoFOAM_1_1DSL_1_1EqnSystem" kindref="compound">EqnSystem</ref>&lt; ValueType &gt;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const EqnTermType &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnSystem.hpp" line="221" column="11" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnSystem.hpp" bodystart="221" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1DSL_1a1d9d6bc1d77b5e9f662ca255053b014b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename EqnTermType</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto NeoFOAM::DSL::operator+</definition>
        <argsstring>(EqnTermType lhs, EqnTermType rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type>EqnTermType</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>EqnTermType</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnSystem.hpp" line="233" column="6" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnSystem.hpp" bodystart="233" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1DSL_1a87726d717a9db7812196802af45e9639" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classNeoFOAM_1_1DSL_1_1EqnSystem" kindref="compound">EqnSystem</ref>&lt; ValueType &gt;</type>
        <definition>EqnSystem&lt;ValueType&gt; NeoFOAM::DSL::operator*</definition>
        <argsstring>(NeoFOAM::scalar scale, const EqnSystem&lt; ValueType &gt; &amp;es)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">NeoFOAM::scalar</ref></type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1DSL_1_1EqnSystem" kindref="compound">EqnSystem</ref>&lt; ValueType &gt; &amp;</type>
          <declname>es</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnSystem.hpp" line="243" column="11" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnSystem.hpp" bodystart="243" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1DSL_1a75feb009509423633d0f7131689b0b12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classNeoFOAM_1_1DSL_1_1EqnSystem" kindref="compound">EqnSystem</ref>&lt; ValueType &gt;</type>
        <definition>EqnSystem&lt;ValueType&gt; NeoFOAM::DSL::operator-</definition>
        <argsstring>(EqnSystem&lt; ValueType &gt; lhs, const EqnSystem&lt; ValueType &gt; &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="classNeoFOAM_1_1DSL_1_1EqnSystem" kindref="compound">EqnSystem</ref>&lt; ValueType &gt;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1DSL_1_1EqnSystem" kindref="compound">EqnSystem</ref>&lt; ValueType &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnSystem.hpp" line="262" column="11" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnSystem.hpp" bodystart="262" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1DSL_1a7fcd1a18ce3c8c306dcc027b5682c07f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
          <param>
            <type>typename EqnTermType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classNeoFOAM_1_1DSL_1_1EqnSystem" kindref="compound">EqnSystem</ref>&lt; ValueType &gt;</type>
        <definition>EqnSystem&lt;ValueType&gt; NeoFOAM::DSL::operator-</definition>
        <argsstring>(EqnSystem&lt; ValueType &gt; lhs, const EqnTermType &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="classNeoFOAM_1_1DSL_1_1EqnSystem" kindref="compound">EqnSystem</ref>&lt; ValueType &gt;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const EqnTermType &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnSystem.hpp" line="269" column="11" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnSystem.hpp" bodystart="269" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1DSL_1a187320339d7ece336818ae5db398fbdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename EqnTermType</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto NeoFOAM::DSL::operator-</definition>
        <argsstring>(EqnTermType lhs, EqnTermType rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type>EqnTermType</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>EqnTermType</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnSystem.hpp" line="276" column="6" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnSystem.hpp" bodystart="276" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1DSL_1a9eb0bda5545ae63aef0e0eeab025c8f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename EqnTermType</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto NeoFOAM::DSL::operator*</definition>
        <argsstring>(NeoFOAM::scalar scale, const EqnTermType &amp;lhs)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">NeoFOAM::scalar</ref></type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const EqnTermType &amp;</type>
          <declname>lhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="233" column="6" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" bodystart="233" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1DSL_1a9e5a99502fbc128ad775705dc92c3259" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename EqnTermType</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto NeoFOAM::DSL::operator*</definition>
        <argsstring>(NeoFOAM::Field&lt; NeoFOAM::scalar &gt; scale, const EqnTermType &amp;lhs)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="classNeoFOAM_1_1Field" kindref="compound">NeoFOAM::Field</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">NeoFOAM::scalar</ref> &gt;</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const EqnTermType &amp;</type>
          <declname>lhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="243" column="6" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" bodystart="243" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1DSL_1addacf53d047addb0c31651643b8eba20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
          <param>
            <type>parallelForFieldKernel&lt; ValueType &gt;</type>
            <declname>ScaleFunction</declname>
            <defname>ScaleFunction</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classNeoFOAM_1_1DSL_1_1EqnTerm" kindref="compound">EqnTerm</ref>&lt; ValueType &gt;</type>
        <definition>EqnTerm&lt;ValueType&gt; NeoFOAM::DSL::operator*</definition>
        <argsstring>(ScaleFunction scaleFunc, const EqnTerm&lt; ValueType &gt; &amp;lhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>ScaleFunction</type>
          <declname>scaleFunc</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1DSL_1_1EqnTerm" kindref="compound">EqnTerm</ref>&lt; ValueType &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="260" column="9" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" bodystart="260" bodyend="271"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnSystem.hpp" line="27" column="1"/>
  </compounddef>
</doxygen>
