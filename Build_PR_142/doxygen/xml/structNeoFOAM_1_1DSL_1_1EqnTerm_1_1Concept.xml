<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Concept" kind="struct" language="C++" prot="private" abstract="yes">
    <compoundname>NeoFOAM::DSL::EqnTerm::Concept</compoundname>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Concept_1a14d20a729499e8610f4ac24c43b5aeec" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::Concept::~Concept</definition>
        <argsstring>()=default</argsstring>
        <name>~Concept</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="145" column="17"/>
      </memberdef>
      <memberdef kind="function" id="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Concept_1a50df2e6a8f4e4dce387d522471ce5aa0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::Concept::display</definition>
        <argsstring>() const =0</argsstring>
        <name>display</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="146" column="29"/>
      </memberdef>
      <memberdef kind="function" id="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Concept_1a2488a5eaf5bf4991c2d3aad06a8cf0ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::Concept::explicitOperation</definition>
        <argsstring>(NeoFOAM::Field&lt; NeoFOAM::scalar &gt; &amp;source)=0</argsstring>
        <name>explicitOperation</name>
        <param>
          <type><ref refid="classNeoFOAM_1_1Field" kindref="compound">NeoFOAM::Field</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">NeoFOAM::scalar</ref> &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="147" column="22"/>
      </memberdef>
      <memberdef kind="function" id="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Concept_1a900d2ff95cc1ee83b2492ac07ad6b88e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::Concept::temporalOperation</definition>
        <argsstring>(NeoFOAM::Field&lt; NeoFOAM::scalar &gt; &amp;field)=0</argsstring>
        <name>temporalOperation</name>
        <param>
          <type><ref refid="classNeoFOAM_1_1Field" kindref="compound">NeoFOAM::Field</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">NeoFOAM::scalar</ref> &gt; &amp;</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="148" column="22"/>
      </memberdef>
      <memberdef kind="function" id="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Concept_1aa676ba4b5fdbfb3c238f7312c1bd49c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::Concept::build</definition>
        <argsstring>(const NeoFOAM::Input &amp;input)=0</argsstring>
        <name>build</name>
        <param>
          <type>const <ref refid="namespaceNeoFOAM_1a161184af07a233e2513b53451edc6b39" kindref="member">NeoFOAM::Input</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="149" column="22"/>
      </memberdef>
      <memberdef kind="function" id="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Concept_1a83734f22b2c22274f9febc52981bc8a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::Concept::evaluated</definition>
        <argsstring>()=0</argsstring>
        <name>evaluated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="151" column="22"/>
      </memberdef>
      <memberdef kind="function" id="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Concept_1a5abeb857630caab8e686f80280499a9b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classNeoFOAM_1_1DSL_1_1EqnTerm_1a618000b1cfaef9cf6a5d6a8564952e0c" kindref="member">EqnTerm::Type</ref></type>
        <definition>virtual EqnTerm::Type NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::Concept::getType</definition>
        <argsstring>() const =0</argsstring>
        <name>getType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="153" column="31"/>
      </memberdef>
      <memberdef kind="function" id="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Concept_1aec3a60a0dc4a2ae01f82a6766b332f98" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::Concept::setField</definition>
        <argsstring>(std::shared_ptr&lt; NeoFOAM::Field&lt; NeoFOAM::scalar &gt;&gt; field)=0</argsstring>
        <name>setField</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classNeoFOAM_1_1Field" kindref="compound">NeoFOAM::Field</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">NeoFOAM::scalar</ref> &gt;&gt;</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="155" column="22"/>
      </memberdef>
      <memberdef kind="function" id="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Concept_1a1fcc64978b88c6cbfc42dd88a8bcfc68" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="structNeoFOAM_1_1ScalingField" kindref="compound">NeoFOAM::ScalingField</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">NeoFOAM::scalar</ref> &gt; &amp;</type>
        <definition>virtual NeoFOAM::ScalingField&lt;NeoFOAM::scalar&gt;&amp; NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::Concept::scaleField</definition>
        <argsstring>()=0</argsstring>
        <name>scaleField</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="156" column="39"/>
      </memberdef>
      <memberdef kind="function" id="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Concept_1afe53dd8cf01457d0030c03048db97712" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="structNeoFOAM_1_1ScalingField" kindref="compound">NeoFOAM::ScalingField</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">NeoFOAM::scalar</ref> &gt;</type>
        <definition>virtual NeoFOAM::ScalingField&lt;NeoFOAM::scalar&gt; NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::Concept::scaleField</definition>
        <argsstring>() const =0</argsstring>
        <name>scaleField</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="157" column="39"/>
      </memberdef>
      <memberdef kind="function" id="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Concept_1a06d4ee178c3adaa741132df2049ba274" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="namespaceNeoFOAM_1ad8645a25cba2275ee5bea619093da91e" kindref="member">NeoFOAM::Executor</ref> &amp;</type>
        <definition>virtual const NeoFOAM::Executor&amp; NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::Concept::exec</definition>
        <argsstring>() const =0</argsstring>
        <name>exec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="159" column="41"/>
      </memberdef>
      <memberdef kind="function" id="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Concept_1a0b49d4d1ca3f7fd2cfb6b3a5282987dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::size_t</type>
        <definition>virtual std::size_t NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::Concept::nCells</definition>
        <argsstring>() const =0</argsstring>
        <name>nCells</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="160" column="29"/>
      </memberdef>
      <memberdef kind="function" id="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Concept_1acff56549820ad0b6f4ffac4718741be0" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">fvcc::VolumeField</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">NeoFOAM::scalar</ref> &gt; *</type>
        <definition>virtual fvcc::VolumeField&lt;NeoFOAM::scalar&gt;* NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::Concept::volumeField</definition>
        <argsstring>()=0</argsstring>
        <name>volumeField</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="161" column="35"/>
      </memberdef>
      <memberdef kind="function" id="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Concept_1a80d807cf16314554cc07ac94911aa610" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::unique_ptr&lt; Concept &gt;</type>
        <definition>virtual std::unique_ptr&lt;Concept&gt; NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::Concept::clone</definition>
        <argsstring>() const =0</argsstring>
        <name>clone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="164" column="33"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="143" column="5" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" bodystart="144" bodyend="165"/>
    <listofallmembers>
      <member refid="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Concept_1aa676ba4b5fdbfb3c238f7312c1bd49c1" prot="public" virt="pure-virtual"><scope>NeoFOAM::DSL::EqnTerm::Concept</scope><name>build</name></member>
      <member refid="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Concept_1a80d807cf16314554cc07ac94911aa610" prot="public" virt="pure-virtual"><scope>NeoFOAM::DSL::EqnTerm::Concept</scope><name>clone</name></member>
      <member refid="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Concept_1a50df2e6a8f4e4dce387d522471ce5aa0" prot="public" virt="pure-virtual"><scope>NeoFOAM::DSL::EqnTerm::Concept</scope><name>display</name></member>
      <member refid="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Concept_1a83734f22b2c22274f9febc52981bc8a1" prot="public" virt="pure-virtual"><scope>NeoFOAM::DSL::EqnTerm::Concept</scope><name>evaluated</name></member>
      <member refid="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Concept_1a06d4ee178c3adaa741132df2049ba274" prot="public" virt="pure-virtual"><scope>NeoFOAM::DSL::EqnTerm::Concept</scope><name>exec</name></member>
      <member refid="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Concept_1a2488a5eaf5bf4991c2d3aad06a8cf0ab" prot="public" virt="pure-virtual"><scope>NeoFOAM::DSL::EqnTerm::Concept</scope><name>explicitOperation</name></member>
      <member refid="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Concept_1a5abeb857630caab8e686f80280499a9b" prot="public" virt="pure-virtual"><scope>NeoFOAM::DSL::EqnTerm::Concept</scope><name>getType</name></member>
      <member refid="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Concept_1a0b49d4d1ca3f7fd2cfb6b3a5282987dd" prot="public" virt="pure-virtual"><scope>NeoFOAM::DSL::EqnTerm::Concept</scope><name>nCells</name></member>
      <member refid="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Concept_1a1fcc64978b88c6cbfc42dd88a8bcfc68" prot="public" virt="pure-virtual"><scope>NeoFOAM::DSL::EqnTerm::Concept</scope><name>scaleField</name></member>
      <member refid="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Concept_1afe53dd8cf01457d0030c03048db97712" prot="public" virt="pure-virtual"><scope>NeoFOAM::DSL::EqnTerm::Concept</scope><name>scaleField</name></member>
      <member refid="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Concept_1aec3a60a0dc4a2ae01f82a6766b332f98" prot="public" virt="pure-virtual"><scope>NeoFOAM::DSL::EqnTerm::Concept</scope><name>setField</name></member>
      <member refid="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Concept_1a900d2ff95cc1ee83b2492ac07ad6b88e" prot="public" virt="pure-virtual"><scope>NeoFOAM::DSL::EqnTerm::Concept</scope><name>temporalOperation</name></member>
      <member refid="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Concept_1acff56549820ad0b6f4ffac4718741be0" prot="public" virt="pure-virtual"><scope>NeoFOAM::DSL::EqnTerm::Concept</scope><name>volumeField</name></member>
      <member refid="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Concept_1a14d20a729499e8610f4ac24c43b5aeec" prot="public" virt="virtual"><scope>NeoFOAM::DSL::EqnTerm::Concept</scope><name>~Concept</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
