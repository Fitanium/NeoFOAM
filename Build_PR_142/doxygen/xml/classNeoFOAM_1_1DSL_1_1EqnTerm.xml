<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classNeoFOAM_1_1DSL_1_1EqnTerm" kind="class" language="C++" prot="public">
    <compoundname>NeoFOAM::DSL::EqnTerm</compoundname>
    <includes refid="eqnTerm_8hpp" local="no">eqnTerm.hpp</includes>
    <innerclass refid="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Concept" prot="private">NeoFOAM::DSL::EqnTerm::Concept</innerclass>
    <innerclass refid="structNeoFOAM_1_1DSL_1_1EqnTerm_1_1Model" prot="private">NeoFOAM::DSL::EqnTerm::Model</innerclass>
    <templateparamlist>
      <param>
        <type>typename ValueType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classNeoFOAM_1_1DSL_1_1EqnTerm_1a618000b1cfaef9cf6a5d6a8564952e0c" prot="public" static="no" strong="yes">
        <type></type>
        <name>Type</name>
        <enumvalue id="classNeoFOAM_1_1DSL_1_1EqnTerm_1a618000b1cfaef9cf6a5d6a8564952e0ca19e45fa0a4406497759dbf0dd423cc83" prot="public">
          <name>Temporal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classNeoFOAM_1_1DSL_1_1EqnTerm_1a618000b1cfaef9cf6a5d6a8564952e0ca07e01d7a96d9fd76cf08aa5916f7c788" prot="public">
          <name>Implicit</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classNeoFOAM_1_1DSL_1_1EqnTerm_1a618000b1cfaef9cf6a5d6a8564952e0ca9d71760e2dd451db2df354d0fd29cd7f" prot="public">
          <name>Explicit</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="81" column="5" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" bodystart="82" bodyend="86"/>
      </memberdef>
      <memberdef kind="typedef" id="classNeoFOAM_1_1DSL_1_1EqnTerm_1ae2dda8c47d92a730873873f008dfc5c2" prot="public" static="no">
        <type>ValueType</type>
        <definition>using NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::EqnTermValueType =  ValueType</definition>
        <argsstring></argsstring>
        <name>EqnTermValueType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="89" column="5" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classNeoFOAM_1_1DSL_1_1EqnTerm_1a693d376486a0720041cb2e778711b8c6" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; Concept &gt;</type>
        <definition>std::unique_ptr&lt;Concept&gt; NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::model_</definition>
        <argsstring></argsstring>
        <name>model_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="227" column="21" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" bodystart="227" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoFOAM_1_1DSL_1_1EqnTerm_1a921fd60f1d19d8af780a2d5271c9a4cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::EqnTerm</definition>
        <argsstring>(T cls)</argsstring>
        <name>EqnTerm</name>
        <param>
          <type>T</type>
          <declname>cls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="92" column="5" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" bodystart="92" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1DSL_1_1EqnTerm_1a0a9a464a1979f513995a79ae81a2c4c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::EqnTerm</definition>
        <argsstring>(const EqnTerm &amp;eqnTerm)</argsstring>
        <name>EqnTerm</name>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1DSL_1_1EqnTerm" kindref="compound">EqnTerm</ref> &amp;</type>
          <declname>eqnTerm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="95" column="5" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1DSL_1_1EqnTerm_1ae57f27f7a7e8b63ee7588a4e98ea6a06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::EqnTerm</definition>
        <argsstring>(EqnTerm &amp;&amp;eqnTerm)</argsstring>
        <name>EqnTerm</name>
        <param>
          <type><ref refid="classNeoFOAM_1_1DSL_1_1EqnTerm" kindref="compound">EqnTerm</ref> &amp;&amp;</type>
          <declname>eqnTerm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="97" column="5" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1DSL_1_1EqnTerm_1a302548c690f2b47898f54a52d2b63912" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1DSL_1_1EqnTerm" kindref="compound">EqnTerm</ref> &amp;</type>
        <definition>EqnTerm&amp; NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::operator=</definition>
        <argsstring>(const EqnTerm &amp;eqnTerm)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1DSL_1_1EqnTerm" kindref="compound">EqnTerm</ref> &amp;</type>
          <declname>eqnTerm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="99" column="13" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" bodystart="99" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1DSL_1_1EqnTerm_1a60864a38f8f1c825b00dd0a0eca8eaea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1DSL_1_1EqnTerm" kindref="compound">EqnTerm</ref> &amp;</type>
        <definition>EqnTerm&amp; NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::operator=</definition>
        <argsstring>(EqnTerm &amp;&amp;eqnTerm)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classNeoFOAM_1_1DSL_1_1EqnTerm" kindref="compound">EqnTerm</ref> &amp;&amp;</type>
          <declname>eqnTerm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="105" column="13" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" bodystart="105" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1DSL_1_1EqnTerm_1a9e7d9a9f4e3abb9fb77ae97925364228" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::display</definition>
        <argsstring>() const</argsstring>
        <name>display</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="111" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1DSL_1_1EqnTerm_1a051a05b89102f19f0e20762d2abf6f04" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::explicitOperation</definition>
        <argsstring>(NeoFOAM::Field&lt; ValueType &gt; &amp;source)</argsstring>
        <name>explicitOperation</name>
        <param>
          <type><ref refid="classNeoFOAM_1_1Field" kindref="compound">NeoFOAM::Field</ref>&lt; ValueType &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="113" column="10" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1DSL_1_1EqnTerm_1afa2dd13f0a8af800a467afc17ba82632" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::temporalOperation</definition>
        <argsstring>(NeoFOAM::Field&lt; ValueType &gt; &amp;field)</argsstring>
        <name>temporalOperation</name>
        <param>
          <type><ref refid="classNeoFOAM_1_1Field" kindref="compound">NeoFOAM::Field</ref>&lt; ValueType &gt; &amp;</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="115" column="10" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1DSL_1_1EqnTerm_1a217b50c058da8db4913d65332ba9f5cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1DSL_1_1EqnTerm_1a618000b1cfaef9cf6a5d6a8564952e0c" kindref="member">EqnTerm::Type</ref></type>
        <definition>EqnTerm::Type NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::getType</definition>
        <argsstring>() const</argsstring>
        <name>getType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="117" column="19" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1DSL_1_1EqnTerm_1a70f2e9a6317a0079d7e3b9ca3d98be40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::setField</definition>
        <argsstring>(std::shared_ptr&lt; NeoFOAM::Field&lt; NeoFOAM::scalar &gt;&gt; field)</argsstring>
        <name>setField</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classNeoFOAM_1_1Field" kindref="compound">NeoFOAM::Field</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">NeoFOAM::scalar</ref> &gt;&gt;</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="119" column="10" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1DSL_1_1EqnTerm_1a571bc66cc62db1e882755b17d474b41d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structNeoFOAM_1_1ScalingField" kindref="compound">NeoFOAM::ScalingField</ref>&lt; ValueType &gt; &amp;</type>
        <definition>NeoFOAM::ScalingField&lt;ValueType&gt;&amp; NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::scaleField</definition>
        <argsstring>()</argsstring>
        <name>scaleField</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="124" column="27" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1DSL_1_1EqnTerm_1a48feb9de50b73af4997298831e6fab0d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structNeoFOAM_1_1ScalingField" kindref="compound">NeoFOAM::ScalingField</ref>&lt; ValueType &gt;</type>
        <definition>NeoFOAM::ScalingField&lt;ValueType&gt; NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::scaleField</definition>
        <argsstring>() const</argsstring>
        <name>scaleField</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="126" column="27" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1DSL_1_1EqnTerm_1a344ca9425f5d9e9ad1b95c3d3cda5804" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::evaluated</definition>
        <argsstring>()</argsstring>
        <name>evaluated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="128" column="10" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1DSL_1_1EqnTerm_1a7ccdc0a2231a4ef18eb2c123e01a3349" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::build</definition>
        <argsstring>(const NeoFOAM::Input &amp;input)</argsstring>
        <name>build</name>
        <param>
          <type>const <ref refid="namespaceNeoFOAM_1a161184af07a233e2513b53451edc6b39" kindref="member">NeoFOAM::Input</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="130" column="10" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1DSL_1_1EqnTerm_1a4ad80a617878a099b63a35b7883f6a05" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespaceNeoFOAM_1ad8645a25cba2275ee5bea619093da91e" kindref="member">NeoFOAM::Executor</ref> &amp;</type>
        <definition>const NeoFOAM::Executor&amp; NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::exec</definition>
        <argsstring>() const</argsstring>
        <name>exec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="132" column="29" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1DSL_1_1EqnTerm_1a73e7f87075c80216ee801c2da8b9a1fd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::nCells</definition>
        <argsstring>() const</argsstring>
        <name>nCells</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="134" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1DSL_1_1EqnTerm_1aa4e696a60956969f0b03dca56bda7461" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">fvcc::VolumeField</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">NeoFOAM::scalar</ref> &gt; *</type>
        <definition>fvcc::VolumeField&lt;NeoFOAM::scalar&gt;* NeoFOAM::DSL::EqnTerm&lt; ValueType &gt;::volumeField</definition>
        <argsstring>()</argsstring>
        <name>volumeField</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="137" column="23" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" bodystart="137" bodyend="137"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="77" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" bodystart="78" bodyend="228"/>
    <listofallmembers>
      <member refid="classNeoFOAM_1_1DSL_1_1EqnTerm_1a7ccdc0a2231a4ef18eb2c123e01a3349" prot="public" virt="non-virtual"><scope>NeoFOAM::DSL::EqnTerm</scope><name>build</name></member>
      <member refid="classNeoFOAM_1_1DSL_1_1EqnTerm_1a9e7d9a9f4e3abb9fb77ae97925364228" prot="public" virt="non-virtual"><scope>NeoFOAM::DSL::EqnTerm</scope><name>display</name></member>
      <member refid="classNeoFOAM_1_1DSL_1_1EqnTerm_1a921fd60f1d19d8af780a2d5271c9a4cb" prot="public" virt="non-virtual"><scope>NeoFOAM::DSL::EqnTerm</scope><name>EqnTerm</name></member>
      <member refid="classNeoFOAM_1_1DSL_1_1EqnTerm_1a0a9a464a1979f513995a79ae81a2c4c8" prot="public" virt="non-virtual"><scope>NeoFOAM::DSL::EqnTerm</scope><name>EqnTerm</name></member>
      <member refid="classNeoFOAM_1_1DSL_1_1EqnTerm_1ae57f27f7a7e8b63ee7588a4e98ea6a06" prot="public" virt="non-virtual"><scope>NeoFOAM::DSL::EqnTerm</scope><name>EqnTerm</name></member>
      <member refid="classNeoFOAM_1_1DSL_1_1EqnTerm_1ae2dda8c47d92a730873873f008dfc5c2" prot="public" virt="non-virtual"><scope>NeoFOAM::DSL::EqnTerm</scope><name>EqnTermValueType</name></member>
      <member refid="classNeoFOAM_1_1DSL_1_1EqnTerm_1a344ca9425f5d9e9ad1b95c3d3cda5804" prot="public" virt="non-virtual"><scope>NeoFOAM::DSL::EqnTerm</scope><name>evaluated</name></member>
      <member refid="classNeoFOAM_1_1DSL_1_1EqnTerm_1a4ad80a617878a099b63a35b7883f6a05" prot="public" virt="non-virtual"><scope>NeoFOAM::DSL::EqnTerm</scope><name>exec</name></member>
      <member refid="classNeoFOAM_1_1DSL_1_1EqnTerm_1a051a05b89102f19f0e20762d2abf6f04" prot="public" virt="non-virtual"><scope>NeoFOAM::DSL::EqnTerm</scope><name>explicitOperation</name></member>
      <member refid="classNeoFOAM_1_1DSL_1_1EqnTerm_1a217b50c058da8db4913d65332ba9f5cd" prot="public" virt="non-virtual"><scope>NeoFOAM::DSL::EqnTerm</scope><name>getType</name></member>
      <member refid="classNeoFOAM_1_1DSL_1_1EqnTerm_1a693d376486a0720041cb2e778711b8c6" prot="private" virt="non-virtual"><scope>NeoFOAM::DSL::EqnTerm</scope><name>model_</name></member>
      <member refid="classNeoFOAM_1_1DSL_1_1EqnTerm_1a73e7f87075c80216ee801c2da8b9a1fd" prot="public" virt="non-virtual"><scope>NeoFOAM::DSL::EqnTerm</scope><name>nCells</name></member>
      <member refid="classNeoFOAM_1_1DSL_1_1EqnTerm_1a302548c690f2b47898f54a52d2b63912" prot="public" virt="non-virtual"><scope>NeoFOAM::DSL::EqnTerm</scope><name>operator=</name></member>
      <member refid="classNeoFOAM_1_1DSL_1_1EqnTerm_1a60864a38f8f1c825b00dd0a0eca8eaea" prot="public" virt="non-virtual"><scope>NeoFOAM::DSL::EqnTerm</scope><name>operator=</name></member>
      <member refid="classNeoFOAM_1_1DSL_1_1EqnTerm_1a571bc66cc62db1e882755b17d474b41d" prot="public" virt="non-virtual"><scope>NeoFOAM::DSL::EqnTerm</scope><name>scaleField</name></member>
      <member refid="classNeoFOAM_1_1DSL_1_1EqnTerm_1a48feb9de50b73af4997298831e6fab0d" prot="public" virt="non-virtual"><scope>NeoFOAM::DSL::EqnTerm</scope><name>scaleField</name></member>
      <member refid="classNeoFOAM_1_1DSL_1_1EqnTerm_1a70f2e9a6317a0079d7e3b9ca3d98be40" prot="public" virt="non-virtual"><scope>NeoFOAM::DSL::EqnTerm</scope><name>setField</name></member>
      <member refid="classNeoFOAM_1_1DSL_1_1EqnTerm_1afa2dd13f0a8af800a467afc17ba82632" prot="public" virt="non-virtual"><scope>NeoFOAM::DSL::EqnTerm</scope><name>temporalOperation</name></member>
      <member refid="classNeoFOAM_1_1DSL_1_1EqnTerm_1a618000b1cfaef9cf6a5d6a8564952e0c" prot="public" virt="non-virtual"><scope>NeoFOAM::DSL::EqnTerm</scope><name>Type</name></member>
      <member refid="classNeoFOAM_1_1DSL_1_1EqnTerm_1aa4e696a60956969f0b03dca56bda7461" prot="public" virt="non-virtual"><scope>NeoFOAM::DSL::EqnTerm</scope><name>volumeField</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
